{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport Login from \"./CPersonne\";\nimport TcpSocket from 'react-native-tcp-socket';\n\nvar Seance = function (_Component) {\n  _inherits(Seance, _Component);\n\n  var _super = _createSuper(Seance);\n\n  function Seance(props) {\n    var _this;\n\n    _classCallCheck(this, Seance);\n\n    _this = _super.call(this, props);\n\n    _this.creationSeance = function _callee() {\n      var p_dateSeance,\n          p_categorie,\n          p_zoneDeTir,\n          p_joueurSelectionne,\n          ConnexionUser,\n          information,\n          selectEntraineur,\n          dateSeance,\n          categorie,\n          zoneDeTir,\n          joueurSelectionne,\n          _args = arguments;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              p_dateSeance = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n              p_categorie = _args.length > 1 && _args[1] !== undefined ? _args[1] : '';\n              p_zoneDeTir = _args.length > 2 && _args[2] !== undefined ? _args[2] : '';\n              p_joueurSelectionne = _args.length > 3 && _args[3] !== undefined ? _args[3] : '';\n              ConnexionUser = Login.getInstance();\n              information = ConnexionUser.getInformationJoueur();\n              selectEntraineur = information.nom;\n              dateSeance = p_dateSeance;\n              categorie = p_categorie;\n              zoneDeTir = p_zoneDeTir;\n              joueurSelectionne = p_joueurSelectionne;\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(fetch('http://192.168.1.26:80/php/mobile_api/connexion_api.php', {\n                method: 'post',\n                header: {\n                  'Accept': 'application/json',\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                  entraineur: selectEntraineur,\n                  dateSeance: dateSeance,\n                  categorie: categorie,\n                  zoneDeTir: zoneDeTir,\n                  joueurSelectionne: joueurSelectionne\n                })\n              }).then(function (Response) {\n                return Response.json();\n              }).then(function (ResponseJson) {\n                information = ResponseJson;\n                console.log(information);\n              }).catch(function (error) {\n                console.error(error);\n              }));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.demarrerLaSeance = function (p_idSeance) {\n      var IDSeance = p_idSeance;\n\n      if (IDSeance == '') {\n        alert(\"Veuillez entrer l'id de la seance\");\n      } else {\n        var client = TcpSocket.createConnection({\n          port: 1440,\n          host: '172.20.24.19'\n        }, function () {\n          client.write(IDSeance);\n          client.destroy();\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  return _createClass(Seance);\n}(Component);\n\nexport { Seance as default };\n;","map":{"version":3,"sources":["C:/Users/Massimiliano/Desktop/Perso/Programmation/Application_Mobile/SmartCage/class/CSeance.js"],"names":["Component","Login","TcpSocket","Seance","props","creationSeance","p_dateSeance","p_categorie","p_zoneDeTir","p_joueurSelectionne","ConnexionUser","getInstance","information","getInformationJoueur","selectEntraineur","nom","dateSeance","categorie","zoneDeTir","joueurSelectionne","fetch","method","header","body","JSON","stringify","entraineur","then","Response","json","ResponseJson","console","log","catch","error","demarrerLaSeance","p_idSeance","IDSeance","alert","client","createConnection","port","host","write","destroy"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;IAEqBC,M;;;;;AACjB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAIfC,cAJe,GAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAMC,cAAAA,YAAN,2DAAoB,EAApB;AAAwBC,cAAAA,WAAxB,2DAAoC,EAApC;AAAwCC,cAAAA,WAAxC,2DAAoD,EAApD;AAAwDC,cAAAA,mBAAxD,2DAA4E,EAA5E;AACTC,cAAAA,aADS,GACOT,KAAK,CAACU,WAAN,EADP;AAETC,cAAAA,WAFS,GAEKF,aAAa,CAACG,oBAAd,EAFL;AAGTC,cAAAA,gBAHS,GAGUF,WAAW,CAACG,GAHtB;AAKTC,cAAAA,UALS,GAKIV,YALJ;AAMTW,cAAAA,SANS,GAMGV,WANH;AAOTW,cAAAA,SAPS,GAOGV,WAPH;AAQTW,cAAAA,iBARS,GAQWV,mBARX;AAAA;AAAA,+CAWPW,KAAK,CAAC,yDAAD,EAA2D;AAEtEC,gBAAAA,MAAM,EAAC,MAF+D;AAGtEC,gBAAAA,MAAM,EAAC;AACH,4BAAU,kBADP;AAEH,kCAAgB;AAFb,iBAH+D;AAOtEC,gBAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,kBAAAA,UAAU,EAAEZ,gBADI;AAEhBE,kBAAAA,UAAU,EAAEA,UAFI;AAGhBC,kBAAAA,SAAS,EAAEA,SAHK;AAIhBC,kBAAAA,SAAS,EAAEA,SAJK;AAKhBC,kBAAAA,iBAAiB,EAAGA;AALJ,iBAAf;AAPiE,eAA3D,CAAL,CAePQ,IAfO,CAeF,UAACC,QAAD;AAAA,uBAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,eAfE,EAgBPF,IAhBO,CAgBF,UAACG,YAAD,EAAgB;AAClBlB,gBAAAA,WAAW,GAAGkB,YAAd;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYpB,WAAZ;AACH,eAnBO,EAoBPqB,KApBO,CAoBD,UAACC,KAAD,EAAS;AACZH,gBAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,eAtBO,CAXO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF;;AAAA,UAwCjBC,gBAxCiB,GAwCA,UAACC,UAAD,EAAc;AAE7B,UAAIC,QAAQ,GAAGD,UAAf;;AAEA,UAAGC,QAAQ,IAAI,EAAf,EAAkB;AACdC,QAAAA,KAAK,CAAC,mCAAD,CAAL;AACH,OAFD,MAIA;AACI,YAAMC,MAAM,GAAGrC,SAAS,CAACsC,gBAAV,CAA2B;AAACC,UAAAA,IAAI,EAAC,IAAN;AAAYC,UAAAA,IAAI,EAAC;AAAjB,SAA3B,EAA6D,YAAM;AAEjFH,UAAAA,MAAM,CAACI,KAAP,CAAaN,QAAb;AACAE,UAAAA,MAAM,CAACK,OAAP;AACF,SAJgB,CAAf;AAKH;AAEF,KAxDgB;;AAAA;AAEhB;;;EAH6B5C,S;;SAAfG,M;AA2DpB","sourcesContent":["import { Component } from 'react';\r\nimport Login from './CPersonne';\r\nimport TcpSocket from 'react-native-tcp-socket';\r\n\r\nexport default class Seance extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n\r\n        creationSeance = async(p_dateSeance= '', p_categorie='', p_zoneDeTir='', p_joueurSelectionne='') => {\r\n            var ConnexionUser = Login.getInstance();\r\n            var information = ConnexionUser.getInformationJoueur();\r\n            var selectEntraineur = information.nom;\r\n            \r\n            var dateSeance = p_dateSeance;\r\n            var categorie = p_categorie;\r\n            var zoneDeTir = p_zoneDeTir;\r\n            var joueurSelectionne = p_joueurSelectionne;\r\n\r\n\r\n            await fetch('http://192.168.1.26:80/php/mobile_api/connexion_api.php',{\r\n\r\n            method:'post',\r\n            header:{\r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                entraineur: selectEntraineur,\r\n                dateSeance: dateSeance,\r\n                categorie: categorie,\r\n                zoneDeTir: zoneDeTir,\r\n                joueurSelectionne : joueurSelectionne,\r\n            })\r\n          })\r\n          .then((Response) => Response.json())\r\n          .then((ResponseJson)=>{\r\n              information = ResponseJson;\r\n              console.log(information);\r\n          })\r\n          .catch((error)=>{\r\n              console.error(error);\r\n          })\r\n      }\r\n\r\n      demarrerLaSeance=(p_idSeance)=>{\r\n\r\n        var IDSeance = p_idSeance;\r\n\r\n        if(IDSeance == ''){\r\n            alert(\"Veuillez entrer l'id de la seance\");\r\n        }\r\n        else\r\n        {\r\n            const client = TcpSocket.createConnection({port:1440, host:'172.20.24.19'}, () => {\r\n            // Write on the socket\r\n             client.write(IDSeance);\r\n             client.destroy();\r\n          });\r\n        }\r\n        \r\n      }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}