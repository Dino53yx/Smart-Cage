{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nvar information = '';\nvar verification = '';\n\nvar Personne = function (_Component) {\n  _inherits(Personne, _Component);\n\n  var _super = _createSuper(Personne);\n\n  function Personne(props) {\n    var _this;\n\n    _classCallCheck(this, Personne);\n\n    _this = _super.call(this, props);\n\n    _this.login = function _callee() {\n      var p_username,\n          p_userPassword,\n          username,\n          userPassword,\n          _args = arguments;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              p_username = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n              p_userPassword = _args.length > 1 && _args[1] !== undefined ? _args[1] : '';\n              username = p_username;\n              userPassword = p_userPassword;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch('http://192.168.1.26:80/php/mobile_api/connexion_api.php', {\n                method: 'post',\n                header: {\n                  'Accept': 'application/json',\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                  nom: username,\n                  password: userPassword\n                })\n              }).then(function (Response) {\n                return Response.json();\n              }).then(function (ResponseJson) {\n                information = ResponseJson;\n                console.log(information);\n              }).catch(function (error) {\n                console.error(error);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getInformationJoueur = function () {\n      return information;\n    };\n\n    _this.inscription = function _callee2(p_userNom, p_userPrenom, p_userPassword, p_userCategorie, userType) {\n      var userNom, userPrenom, userPassword, userCategorie;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              userNom = p_userNom;\n              userPrenom = p_userPrenom;\n              userPassword = p_userPassword;\n              userCategorie = p_userCategorie;\n              userType = userType;\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(fetch('http://192.168.1.26:80/php/mobile_api/inscription_api.php', {\n                method: 'post',\n                header: {\n                  'Accept': 'application/json',\n                  'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                  nom: userNom,\n                  prenom: userPrenom,\n                  password: userPassword,\n                  categorie: userCategorie,\n                  type: userType\n                })\n              }).then(function (Response) {\n                return Response.json();\n              }).then(function (ResponseJson) {\n                verification = ResponseJson;\n                console.log(verification);\n              }).catch(function (error) {\n                console.error(error);\n              }));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(Personne, [{\n    key: \"getVerificationInscription\",\n    value: function getVerificationInscription() {\n      return verification;\n    }\n  }], [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (Personne.UserConnexion == null) {\n        Personne.UserConnexion = new Personne();\n      }\n\n      return this.UserConnexion;\n    }\n  }]);\n\n  return Personne;\n}(Component);\n\nPersonne.UserConnexion = null;\nexport { Personne as default };","map":{"version":3,"sources":["C:/Users/Massimiliano/Desktop/Perso/Programmation/Application_Mobile/SmartCage/class/CPersonne.js"],"names":["Component","information","verification","Personne","props","login","p_username","p_userPassword","username","userPassword","fetch","method","header","body","JSON","stringify","nom","password","then","Response","json","ResponseJson","console","log","catch","error","getInformationJoueur","inscription","p_userNom","p_userPrenom","p_userCategorie","userType","userNom","userPrenom","userCategorie","prenom","categorie","type","UserConnexion"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\n\r\nvar information = '';\r\nvar verification = '';\r\n\r\nexport default class Personne extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n\r\n\r\n      static UserConnexion = null;\r\n      /**\r\n   * @returns {Personne}\r\n   */\r\n       static getInstance() {\r\n          if (Personne.UserConnexion == null) {\r\n            Personne.UserConnexion = new Personne();\r\n          }\r\n          return this.UserConnexion;\r\n      }\r\n  \r\n      //ReqûeteSql \r\n      login = async(p_username='', p_userPassword='') => {\r\n          var username = p_username;\r\n          var userPassword =  p_userPassword;\r\n\r\n          //Le await rend la méthode fetch asynchrone\r\n\r\n          await fetch('http://192.168.1.26:80/php/mobile_api/connexion_api.php',{\r\n            method:'post',\r\n            header:{\r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                nom: username,\r\n                password: userPassword,\r\n            })\r\n          })\r\n          .then((Response) => Response.json())\r\n          .then((ResponseJson)=>{\r\n              information = ResponseJson;\r\n              console.log(information);\r\n          })\r\n          .catch((error)=>{\r\n              console.error(error);\r\n          })\r\n      }\r\n      \r\n      getInformationJoueur=()=>{\r\n          return(information);\r\n      }\r\n\r\n      inscription = async(p_userNom, p_userPrenom, p_userPassword, p_userCategorie, userType) =>{\r\n        var userNom = p_userNom;\r\n        var userPrenom =  p_userPrenom;\r\n        var userPassword = p_userPassword;\r\n        var userCategorie = p_userCategorie;\r\n        var userType = userType;\r\n\r\n\r\n        await fetch('http://192.168.1.26:80/php/mobile_api/inscription_api.php',{\r\n\r\n            method:'post',\r\n            header:{\r\n                'Accept': 'application/json',\r\n                'Content-type': 'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                nom: userNom,\r\n                prenom: userPrenom,\r\n                password: userPassword,\r\n                categorie: userCategorie,\r\n                type: userType,\r\n            })\r\n          })\r\n          .then((Response) => Response.json())\r\n          .then((ResponseJson)=>{\r\n              verification = ResponseJson;\r\n              console.log(verification);\r\n          })\r\n          .catch((error)=>{\r\n              console.error(error);\r\n          })\r\n        }\r\n\r\n        getVerificationInscription(){\r\n            return(verification);\r\n        }\r\n        //Le await rend la méthode fetch asynchrone\r\n        \r\n\r\n}"]},"metadata":{},"sourceType":"module"}